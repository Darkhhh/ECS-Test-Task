//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IngotDepthComponent ingotDepth { get { return (IngotDepthComponent)GetComponent(GameComponentsLookup.IngotDepth); } }
    public bool hasIngotDepth { get { return HasComponent(GameComponentsLookup.IngotDepth); } }

    public void AddIngotDepth(int newValue) {
        var index = GameComponentsLookup.IngotDepth;
        var component = (IngotDepthComponent)CreateComponent(index, typeof(IngotDepthComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIngotDepth(int newValue) {
        var index = GameComponentsLookup.IngotDepth;
        var component = (IngotDepthComponent)CreateComponent(index, typeof(IngotDepthComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIngotDepth() {
        RemoveComponent(GameComponentsLookup.IngotDepth);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIngotDepth;

    public static Entitas.IMatcher<GameEntity> IngotDepth {
        get {
            if (_matcherIngotDepth == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IngotDepth);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIngotDepth = matcher;
            }

            return _matcherIngotDepth;
        }
    }
}
