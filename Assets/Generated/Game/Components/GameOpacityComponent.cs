//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OpacityComponent opacity { get { return (OpacityComponent)GetComponent(GameComponentsLookup.Opacity); } }
    public bool hasOpacity { get { return HasComponent(GameComponentsLookup.Opacity); } }

    public void AddOpacity(float newValue) {
        var index = GameComponentsLookup.Opacity;
        var component = (OpacityComponent)CreateComponent(index, typeof(OpacityComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOpacity(float newValue) {
        var index = GameComponentsLookup.Opacity;
        var component = (OpacityComponent)CreateComponent(index, typeof(OpacityComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOpacity() {
        RemoveComponent(GameComponentsLookup.Opacity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOpacity;

    public static Entitas.IMatcher<GameEntity> Opacity {
        get {
            if (_matcherOpacity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Opacity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOpacity = matcher;
            }

            return _matcherOpacity;
        }
    }
}
